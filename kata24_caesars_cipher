/*


One of the simplest and most widely known ciphers is a Caesar cipher, also known as a shift cipher. In a shift cipher the meanings of the letters are shifted by some set amount.

A common modern use is the ROT13 cipher, where the values of the letters are shifted by 13 places. Thus A ↔ N, B ↔ O and so on.

Write a function which takes a ROT13 encoded string as input and returns a decoded string.

All letters will be uppercase. Do not transform any non-alphabetic character (i.e. spaces, punctuation), but do pass them on.

*/

/*
rot13("SERR PBQR PNZC") => FREE CODE CAMP

rot13("SERR CVMMN!") => FREE PIZZA!

rot13("SERR YBIR?") => FREE LOVE?


rot13("GUR DHVPX OEBJA SBK WHZCF BIRE GUR YNML QBT.") => THE QUICK BROWN FOX JUMPS OVER THE LAZY DOG.
*/

const alphabet = [...Array(26)].map((_, y) => String.fromCharCode(y + 65)).join('')


function rot13(str) {
    const sequenceOne = alphabet.slice(0, alphabet.length / 2)
    // here i just devide alphabet into chunks and then work with indexes 
    const sequenceTwo = alphabet.slice(alphabet.length / 2, alphabet.length)
    return str.split('')
        .map((x) => sequenceOne[sequenceTwo.indexOf(x)] ? sequenceOne[sequenceTwo.indexOf(x)] :
            x === "!" || x === "?" || x === "." ? x : sequenceTwo[sequenceOne.indexOf(x)])
        .map((x) => x === undefined ? ' ' : x)
        .join('')


}

console.log(rot13("SERR PBQR PNZC"));
console.log(rot13("SERR CVMMN!"));
console.log(rot13("SERR YBIR?"));
console.log(rot13("GUR DHVPX OEBJA SBK WHZCF BIRE GUR YNML QBT."))
