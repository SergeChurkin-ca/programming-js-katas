/*


Create a function that sums two arguments together. If only one argument is provided, then return a function that expects one argument and returns the sum.

For example, addTogether(2, 3) should return 5, and addTogether(2) should return a function.

Calling this returned function with a single argument will then return the sum:

var sumTwoAnd = addTogether(2);

sumTwoAnd(3) returns 5.

If either argument isn't a valid number, return undefined.

/*
addTogether(2, 3) => 5.
Passed

addTogether(23, 30) => 53.
Passed

addTogether(5)(7) => 12.
Passed

addTogether("http://bit.ly/IqT6zt") => undefined.
Passed

addTogether(2, "3") => undefined.
Passed

addTogether(2)([3]) => undefined.
*/

function addTogether() {

    if ([...arguments].length === 2) {
        if (typeof arguments[0] === 'number' && typeof arguments[1] === 'number') {
            return [...arguments].reduce((a, b) => a + b)
        } else {
            return undefined
        }
    }

    if (typeof arguments[0] === 'number') {
        let num = arguments[0]
        return function(x) {
            if (typeof x !== 'number') {
                return undefined
            } else {
                return x + num
            }
        }
    }

}

console.log(addTogether(2, 3));
console.log(addTogether(5)(7));
console.log(addTogether(15)(7));
console.log(addTogether("http://bit.ly/IqT6zt"));
console.log(addTogether(2, "3"))
console.log(addTogether(2)([3]))
